class Solution {
    int binarySearchRotation(int low,int high,int[] arr){
        if(low>high) {return -1;}
        int mid=low+((high-low)/2);
        if(mid==0){
            if(arr[mid]<arr[arr.length-1]) {return arr[0];}
            else {return arr[1];} }
        if(arr[mid]<arr[mid-1] && arr[mid]<arr[0])
            return arr[mid];
        if(arr[mid]>arr[mid-1] && arr[mid]<arr[arr.length-1])
            return binarySearchRotation(low,mid-1,arr);
        else if(arr[mid]>arr[mid-1] && arr[mid]>arr[arr.length-1])
            return binarySearchRotation(mid+1,high,arr);
        return -1;  }
    public int findMin(int[] nums) {
        if(nums.length==1)
            return nums[0];
        if(nums[0]<nums[nums.length-1]) { return nums[0];}
        return binarySearchRotation(0,nums.length-1,nums);
    }}
